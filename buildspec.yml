version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t ${REPOSITORY_URI}:${IMAGE_TAG} -f docker/api/Dockerfile .
      # latestタグは作成しない
  
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      # latestタグはプッシュしない
      - echo Getting image digest...
      - aws ecr describe-images --repository-name ${IMAGE_REPO_NAME} --image-ids imageTag=${IMAGE_TAG} --query imageDetails[0].imageDigest --output text > image-digest.txt
      - IMAGE_DIGEST=$(cat image-digest.txt)
      - echo "Image digest: $IMAGE_DIGEST"
      - echo Writing image definitions file with digest...
      - echo "[{\"name\":\"api-container\",\"imageUri\":\"${REPOSITORY_URI}@${IMAGE_DIGEST}\"}]" > imageDefinitions.json
      - cat imageDefinitions.json

artifacts:
  files:
    - imageDefinitions.json
  discard-paths: yes

cache:
  paths:
    - /root/.cache/pip/**/*
